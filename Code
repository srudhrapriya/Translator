import StringIO
import os.path
import pycurl
#variables
filename = 'daveconroy.flac'
key = 'AIzaSyAJGhGx0n3UgdgbZRbeT73aR_V2gSvr5xs'
url = 'https://www.google.com/speech-api/v2/recognize?output=json&lang=en-us&key=' + key
#send the file to google speech api
c = pycurl.Curl()
c.setopt(pycurl.VERBOSE, 0)
c.setopt(pycurl.URL, url)
fout = StringIO.StringIO()
c.setopt(pycurl.WRITEFUNCTION, fout.write)
c.setopt(pycurl.POST, 1)
c.setopt(pycurl.HTTPHEADER, ['Content-Type: audio/x-flac; rate=16000'])
filesize = os.path.getsize(filename)
c.setopt(pycurl.POSTFIELDSIZE, filesize)
fin = open(filename, 'rb')
c.setopt(pycurl.READFUNCTION, fin.read)
c.perform()
response_code = c.getinfo(pycurl.RESPONSE_CODE)
response_data = fout.getvalue()
#since google replies with mutliple json strings, the built in python json decoders dont work well

23

start_loc = response_data.find("transcript")
tempstr = response_data[start_loc+13:]
end_loc = tempstr.find("\"")
final_result = tempstr[:end_loc]
c.close()
print ("You Said:" + final_result)
#part 2
os.system("python PiTranslate.py -o en -d es -t '" + final_result + "'")
import json
import requests
import urllib
import subprocess
import argparse
parser = argparse.ArgumentParser(description='This is a demo script by DaveConroy.com.')
parser.add_argument('-o','--origin_language', help='Origin Language',required=True)
parser.add_argument('-d','--destination_language', help='Destination Language', required=True)
parser.add_argument('-t','--text_to_translate', help='Text to Translate', required=True)
args = parser.parse_args()
## show values ##
print ("Origin: %s" % args.origin_language )
print ("Destination: %s" % args.destination_language )
print ("Text: %s" % args.text_to_translate )
text = args.text_to_translate
origin_language=args.origin_language
destination_language=args.destination_language

def speakOriginText(phrase):
googleSpeechURL = "http://translate.google.com/translate_tts?tl="+ origin_language
+"&ie=UTF-8&q=" + phrase

24
subprocess.call(["mplayer",googleSpeechURL], shell=False, stdout=subprocess.PIPE,
stderr=subprocess.PIPE)
def speakDestinationText(phrase):
googleSpeechURL = "http://translate.google.com/translate_tts?tl=" + destination_language
+"&ie=UTF-8&q=" + phrase
print (googleSpeechURL.encode("utf-8"))
subprocess.call(["mplayer",googleSpeechURL.encode("utf-8")], shell=False,
stdout=subprocess.PIPE, stderr=subprocess.PIPE)
args = {
'client_id': 'f787d437-9d71-4b5e-9ee7-f78a509421e2',#your client id here
'client_secret': 'e4b89cce-b55b-488d-b685-2c06afba190c',#your azure secret here
'scope': 'http://api.microsofttranslator.com',
'grant_type': 'client_credentials'
}
oauth_url = 'https://datamarket.accesscontrol.windows.net/v2/OAuth2-13'
oauth_junk = json.loads(requests.post(oauth_url,data=urllib.urlencode(args)).content)
translation_args = {
'text': text,
'to': destination_language,
'from': origin_language
}
headers={'Authorization': 'Bearer '+oauth_junk['access_token']}
translation_url = 'http://api.microsofttranslator.com/V2/Ajax.svc/Translate?'
translation_result =
requests.get(translation_url+urllib.urlencode(translation_args),headers=headers)
translation=translation_result.text[2:-1]
speakOriginText('Translating ' + translation_args["text"])
speakDestinationText(translation)
